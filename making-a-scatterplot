<!DOCTYPE html>
<html lang="en">
<head>

	<meta charset="utf-8" />

	<title>Making a scatterplot &mdash; Scott Murray &mdash; alignedleft</title>
	
	<meta name="description" content="Data visualization, generative art, and tutorials by Scott Murray, code artist." />
	<meta name="keywords" content="code, art, design, data, visualization, generative, algorithmic, processing, d3, d3.js, book, maps" />
	<meta name="robots" content="index, follow" />

	<link rel="alternate" type="application/rss+xml" href="http://alignedleft.com/tutorials/d3/feed" />
	
	<link rel="stylesheet" type="text/css" media="screen" href="http://alignedleft.com/assets/css/screen.css" />
		<link rel="stylesheet" type="text/css" media="screen" href="http://alignedleft.com/assets/css/tutorial.css" />
	<link rel="stylesheet" type="text/css" media="screen and (max-device-width: 480px)" href="http://alignedleft.com/assets/css/narrow.css" />
	<meta name="viewport" content="initial-scale=1.0" />

	
	
</head>

<body class="tutorial">

	
	<header>
		<h1><a href="http://alignedleft.com/">Scott Murray</a><span class="prof">, code artist</span></h1>
		<nav>
  <ul>
        <li><a href="http://alignedleft.com/about">About</a></li>
        <li><a href="http://alignedleft.com/work">Work</a></li>
        <li><a class="active" href="http://alignedleft.com/tutorials">Tutorials</a></li>
        <li><a href="http://alignedleft.com/resources">Resources</a></li>
        <li><a href="http://alignedleft.com/talks">Talks</a></li>
        <li><a href="http://alignedleft.com/contact">Contact</a></li>
      </ul>
</nav>	</header>

	<!--[if lte IE 8]>
		<div id="ie_warning"><strong>You&rsquo;re using an old version of Internet Explorer.</strong> Consider upgrading your browser to <a href="http://www.apple.com/safari/">Safari</a>, <a href="http://www.mozilla.org/en-US/firefox/new/">Firefox</a>, or <a href="http://www.google.com/chrome">Chrome</a>, and experience a more beautiful web!</div>
	<![endif]-->

	<noscript>
		<div id="js_warning"><strong>JavaScript is turned off, so this page won&rsquo;t be very interactive.</strong> Switch JavaScript back on in your web browser for the full experience.</div>
	</noscript>

<h3>
	<a href="http://alignedleft.com/tutorials">Tutorials</a> &gt;
	<a href="http://alignedleft.com/tutorials/d3">D3</a> &gt;
	Making a scatterplot</h3>

<h2>Making a scatterplot</h2>

<div id="text">

	<p class="timestamp">Last updated 2012 December 30</p>

	<p>So far, we’ve drawn only bar charts with simple data — just one-dimensional sets of numbers.</p>

<p>But when you have two sets of values to plot against each other, you need a second dimension. The scatterplot is a common type of visualization that represents two sets of corresponding values on two different axes: horizontal and vertical, x and y.</p>

<h2>The Data</h2>

<p>As you saw in <em>Types of data</em>, you have a lot of flexibility around how you structure your data set.  For our scatterplot, I’m going to use an array of arrays.  The primary array will contain one element for each data “point.”  Each of those “point” elements will be another array, with just two values: one for the x value, and one for y.</p>

<pre><code>var dataset = [
                [5, 20], [480, 90], [250, 50], [100, 33], [330, 95],
                [410, 12], [475, 44], [25, 67], [85, 21], [220, 88]
              ];
</code></pre>

<p>Remember, <code>[]</code> means array, so nested hard brackets <code>[[]]</code> indicate an array within another array.  We separate array elements with commas, so an array containing three other arrays would look like: <code>[[],[],[]]</code></p>

<p>We could rewrite our data set so it’s easier to read, like so:</p>

<pre><code>var dataset = [
                  [ 5,     20 ],
                  [ 480,   90 ],
                  [ 250,   50 ],
                  [ 100,   33 ],
                  [ 330,   95 ],
                  [ 410,   12 ],
                  [ 475,   44 ],
                  [ 25,    67 ],
                  [ 85,    21 ],
                  [ 220,   88 ]
              ];
</code></pre>

<p>Now you can see that each of these 10 rows will correspond to one point in our visualization.  With the row <code>[5, 20]</code>, for example, we’ll use <code>5</code> as the x value, and <code>20</code> for the y.</p>

<h2>The Scatterplot</h2>

<p>Let’s carry over most of the code from our bar chart experiments, including the piece that creates the SVG element:</p>

<pre><code>//Create SVG element
var svg = d3.select("body")
            .append("svg")
            .attr("width", w)
            .attr("height", h);
</code></pre>

<p>Instead of creating <code>rect</code>s, however, we’ll make a <code>circle</code> for each data point:</p>

<pre><code>svg.selectAll("circle")
   .data(dataset)
   .enter()
   .append("circle")
</code></pre>

<p>Also, instead of specifying the <code>rect</code> attributes of <code>x</code>, <code>y</code>, <code>width</code>, and <code>height</code>, our <code>circle</code>s need <code>cx</code>, <code>cy</code>, and <code>r</code>:</p>

<pre><code>   .attr("cx", function(d) {
        return d[0];
   })
   .attr("cy", function(d) {
        return d[1];
   })
   .attr("r", 5);
</code></pre>

<p><img src="http://alignedleft.com/content/03-tutorials/01-d3/140-making-a-scatterplot/1.png" title="Simple scatterplot" alt="Simple scatterplot" /></p>

<p><a href="http://alignedleft.com/content/03-tutorials/01-d3/140-making-a-scatterplot/1.html">Here&rsquo;s that working scatterplot.</a></p>

<p>Notice how we access the data values and use them for the <code>cx</code> and <code>cy</code> values.  When using <code>function(d)</code>, D3 automatically hands off the current data value as <code>d</code> to your function.  In this case, the current data value is one of the small arrays in our larger <code>dataset</code> array.</p>

<p>When <code>d</code> is an array of values (and not just a single value, like <code>3.14159</code>), you need to use bracket notation to access its values.  Hence, instead of <code>return d</code>, we have <code>return d[0]</code> and <code>return d[1]</code>, which return the first and second values of the array, respectively.</p>

<p>For example, in the case of our first data point <code>[5, 20]</code>, the first value (array position <code>0</code>) is <code>5</code>, and the second value (array position <code>1</code>) is <code>20</code>.  Thus:</p>

<pre><code>d[0] returns 5
d[1] returns 20
</code></pre>

<p>By the way, if you ever want to access any value in the larger data set (outside of D3, say), you can do so using bracket notation.  For example:</p>

<pre><code>dataset[5] returns [410, 12]
</code></pre>

<p>You can string brackets together, to access values within nested arrays:</p>

<pre><code>dataset[5][1] returns 12
</code></pre>

<p>Don’t believe me?  <a href="http://alignedleft.com/content/03-tutorials/01-d3/140-making-a-scatterplot/1.html">Take another look at the scatterplot</a>, open your JavaScript console, and try typing in <code>dataset[5]</code> or <code>dataset[5][1]</code> and see what happens.</p>

<h2>Size</h2>

<p>Maybe you want the circles to be different sizes, so their radii correspond to their y values.  Instead of setting all <code>r</code> values to <code>5</code>, try:</p>

<pre><code>.attr("r", function(d) {
    return Math.sqrt(h - d[1]);
});
</code></pre>

<p><img src="http://alignedleft.com/content/03-tutorials/01-d3/140-making-a-scatterplot/2.png" title="Scatterplot with sized circles" alt="Scatterplot with sized circles" /></p>

<p><a href="http://alignedleft.com/content/03-tutorials/01-d3/140-making-a-scatterplot/2.html">This is neither pretty nor useful</a>, but it illustrates how you might use <code>d</code>, along with bracket notation, to reference data values and set <code>r</code> accordingly.</p>

<h2>Labels</h2>

<p>Let’s label our data points with <code>text</code> elements. I’ll adapt the label code from our bar chart experiments, starting with:</p>

<pre><code>svg.selectAll("text")
   .data(dataset)
   .enter()
   .append("text")
</code></pre>

<p>So far, this looks for all <code>text</code> elements in the SVG (there aren’t any yet), and then appends a new <code>text</code> element for each data point.  Use the <code>text()</code> method to specify each element’s contents:</p>

<pre><code>   .text(function(d) {
        return d[0] + "," + d[1];
   })
</code></pre>

<p>This looks messy, but bear with me.  Once again, we’re using <code>function(d)</code> to access each data point.  Then, within the function, we’re using <em>both</em> <code>d[0]</code> <em>and</em> <code>d[1]</code> to get both values within that data point array.</p>

<p>The plus <code>+</code> symbols, when used with strings, such as the comma between quotation marks <code>","</code>, act as <em>append</em> operators.  So what this one line of code is really saying is:  Get the values of <code>d[0]</code> and <code>d[1]</code> and smush them together with a comma in the middle.  The end result should be something like <code>5,20</code> or <code>25,67</code>.</p>

<p>Next, we specify <em>where</em> the text should be placed with <code>x</code> and <code>y</code> values.  For now, let’s just use <code>d[0]</code> and <code>d[1]</code>, the same values that we used to specify the <code>circle</code> positions. </p>

<pre><code>   .attr("x", function(d) {
        return d[0];
   })
   .attr("y", function(d) {
        return d[1];
   })
</code></pre>

<p>Finally, add a bit of font styling with:</p>

<pre><code>   .attr("font-family", "sans-serif")
   .attr("font-size", "11px")
   .attr("fill", "red");
</code></pre>

<p><img src="http://alignedleft.com/content/03-tutorials/01-d3/140-making-a-scatterplot/3.png" title="Scatterplot with labels" alt="Scatterplot with labels" /></p>

<p><a href="http://alignedleft.com/content/03-tutorials/01-d3/140-making-a-scatterplot/3.html">Here&rsquo;s that working code.</a></p>

<h2>Next Steps</h2>

<p>Hopefully, some core concepts of D3 are becoming clear: Loading data, generating new elements, and using data values to derive attribute values for those elements.</p>

<p>Yet the image above is barely passable as a data visualization. The scatterplot is hard to read, and the code doesn’t use our data flexibly. To be honest, we haven’t yet improved on — gag — Excel’s <em>Chart Wizard!</em></p>

<p>Not to worry: D3 is way cooler than Chart Wizard (not to mention Clippy), but generating a shiny, interactive chart involves taking our D3 skills to the next level.  To use data flexibly, we’ll learn about D3’s <em>scales</em>.  To make our scatterplot easier to read, we’ll learn about <em>axis generators</em> and axis labels.  Following that, we’ll make things interactive and learn how to update data on the fly.</p>

			<p class="next_up">Next up: <a href="http://alignedleft.com/tutorials/d3/scales">Scales</a> &rarr;</p>
	
	<p class="feedback">
	<a href="http://www.jdoqocy.com/click-6754088-11260198?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F0636920026938.do%3Fcmp%3Daf-strata-books-videos-product_cj_9781449339739_%2525zp&cjsku=0636920026938"><img src="../../assets/images/idvftw_cover.gif" border="0" alt="Interactive Data Visualization for the Web"></a>These tutorials have been expanded into a book, <em>Interactive Data Visualization for the Web</em>, published by O&rsquo;Reilly in March 2013.  <a href="http://www.dpbolvw.net/click-6754088-11260198?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F0636920026938.do%3Fcmp%3Daf-strata-books-videos-product_cj_9781449339739_%2525zp&cjsku=0636920026938">Purchase the ebook and print editions</a> from O&rsquo;Reilly. <a href="http://chimera.labs.oreilly.com/books/1230000000345/">A free, online version</a> includes interactive examples.  Download <a href="https://github.com/alignedleft/d3-book/">the sample code files</a> and <a href="https://tinyletter.com/alignedleft">sign up to receive updates by email</a>.<br/>
	<br/>
	<a href="http://twitter.com/alignedleft">Follow me on Twitter</a> or <a href="http://alignedleft.com/tutorials/d3/feed">watch this RSS feed</a> for other updates.<br/>
	<br/>
	These tutorials have been generously translated to <a href="http://pkuwwt.github.com/d3-tutorial-cn">Chinese (简体中文)</a> by <a href="http://pkuwwt.github.com/">Wentao Wang</a>, <a href="http://kaisersly.github.io/scottmurray-d3-fr/">French (Français)</a> by <a href="https://twitter.com/kaisersly">Sylvain Kieffer</a>, <a href="http://ja.d3js.info/alignedleft/tutorials/d3/">Japanese (日本語版)</a> by <a href="http://blog.node.ws">Hideharu Sakai</a>, <a href="http://serganbus.github.io/d3tutorials/">Russian (русский)</a> by <a href="http://serganbus.github.io/">Sergey Ivanov</a>, and <a href="http://gcoch.github.io/D3-tutorial/">Spanish (Español)</a> by <a href="https://twitter.com/gabrielcoch">Gabriel Coch</a>.<br/>
	<br/>
	Also see my video course, &ldquo;<a href="http://www.anrdoezrs.net/click-6754088-11790507">An Introduction to d3.js: From Scattered to Scatterplot</a>.&rdquo;
</p>

<div style="clear: both;"></div>
</div>

	<footer>
		<p>Copyright © 2006–2015 Scott Murray</p>
	</footer>

<!-- Piwik -->
<script type="text/javascript">
	var _paq = _paq || [];
	_paq.push(["setDocumentTitle", document.domain + "/" + document.title]);
		_paq.push(["trackPageView"]);
	_paq.push(["enableLinkTracking"]);

	(function() {
		var u=(("https:" == document.location.protocol) ? "https" : "http") + "://track.alignedleft.com/";
		_paq.push(["setTrackerUrl", u+"piwik.php"]);
		_paq.push(["setSiteId", "1"]);
		var d=document, g=d.createElement("script"), s=d.getElementsByTagName("script")[0]; g.type="text/javascript";
		g.defer=true; g.async=true; g.src=u+"piwik.js"; s.parentNode.insertBefore(g,s);
	})();
</script>
<!-- End Piwik -->

</body>
</html>